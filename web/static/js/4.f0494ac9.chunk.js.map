{"version":3,"sources":["data/mockList.js","modules/common/utils.js","modules/filter.js","modules/fieldFilterControl_Category.js","modules/fieldFilterControl_DateRange.js","modules/fieldFilterControl_RangeContinuous.js","modules/fieldFilterControl_RangeDiscrete.js","modules/filterControl.js","modules/fieldFilterControl.js","modules/fieldFilterControl_CategorySingle.js","modules/fieldFilterControl_CategoryMultiple.js","modules/fieldFilterControlGroup.js","examples/dashboardExample.js"],"names":["mockProducts","_","require","filterValuesByFieldName","data","fieldName","values","map","o","filter","v","isNaN","formatDate","date","Date","toISOString","slice","replace","Filter","owner","this","Error","FilterGroup","filters","FilterGroupOrGate","isEmpty","finalData","push","uniqWith","isEqual","FilterGroupAndGate","finalDataArray","intersectionWith","FieldNameFilter","fieldValue","value","isArray","includes","FieldValueRangeFilter","lowerLimit","upperLimit","FieldDateRangeFilter","startDate","endDate","time","parse","getTime","startTime","error","Facet","name","occurrences","checked","onChecked","showOccurrences","searchKey","className","onClick","onChange","event","target","highlightStyle","color","backgroundColor","padding","margin","searchWords","autoEscape","textToHighlight","CheckboxOptionList","summary","showOccurrencesColumn","rowsToShow","selectedOptions","rows","length","row","find","temp","remove","n","FacetRadio","onLabelClicked","RadioOptionList","selected","selectedValue","FieldFilterControlCategory","onFilterChanged","multipleSelect","baseData","config","field","searchBarDisplayThreshold","sortBarDisplayThreshold","collapseThreshold","sortByOccurrences","sortAscent","useState","searchText","setSearchText","sortByOccurrencesBuffer","setSortByOccurrences","sortAscentBuffer","setSortAscentBuffer","setRowsToShow","sortBy","uniq","s","orderBy","filterSummaryByFieldName","showSearchBar","searchedResult","toLower","showSortBar","showExpandBar","filterGroup","f","getOwner","getFilters","getFieldValue","console","log","undefined","autoComplete","placeholder","p","DateRangeButton","id","useDropdownToggle","props","toggle","type","substring","DateRangePanel","role","show","onClose","onDateRangeChanged","thisYearStart","getFullYear","lastYearStart","useDropdownMenu","flip","offset","style","display","ranges","key","selection","inputRanges","staticRanges","defaultStaticRanges","label","hasCustomRendering","range","isSelected","DateRangeSelecttor","setShow","Dropdown","onToggle","FilterControl","title","children","currentFilter","EFieldType","CATEGORY_SINGLE","CATEGORY_MULTIPLE","DATE_RANGE","VALUE_DISCRETE","VALUE_CONTINUOUS","RANGE_DISCRETE","RANGE_CONTINUOUS","EFieldFilterControl","rawDates","realDates","d","e","filterDatesByFieldName","times","minTime","min","maxTime","max","ownedFilter","getStartDate","endTime","getEndDate","unit","minValue","maxValue","marks","getLowerLimit","getUpperLimit","lower","upper","FieldFilterControl","impactedByOtherFilters","isActive","otherFilters","Control","Block","FieldFilterControlGroup","filterDescriptors","onFiltered","setFilters","active","setActive","updateFilters","newFilters","kit","descriptors","DashboardExample","filteredData","setFilteredData","width","height","alignItems","justifyContent","position","verticalAlign","flex","overflow","JSON","stringify"],"mappings":"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","file":"static/js/4.f0494ac9.chunk.js","sourcesContent":["const mockProducts = [\n    {\n        \"name\": \"Children Supersoft mask\",\n        \"brand\": \"CARTERS\",\n        \"type\": \"mask\",\n        \"origin\": \"China\",\n        \"datePublished\": \"2021-10-10 12:12:12\",\n        \"price\": 5.12,\n        \"deliveryDates\": 3,\n        \"colors\": [\"red\", \"yellow\", \"orange\"],\n        \"conditions\": [\"new\"]\n    },\n    {\n        \"name\": \"Adult Supersoft mask\",\n        \"brand\": \"CARTERS\",\n        \"type\": \"mask\",\n        \"origin\": \"China\",\n        \"datePublished\": \"2021-10-20 12:12:12\",\n        \"price\": 4.99,\n        \"deliveryDates\": 3,\n        \"colors\": [\"red\", \"black\", \"blue\"],\n        \"conditions\": [\"new\"]\n    },\n    {\n        \"name\": \"Adult Supersoft mask low cost\",\n        \"brand\": \"CARTERS\",\n        \"type\": \"mask\",\n        \"origin\": \"Vietnam\",\n        \"datePublished\": \"2021-08-20 12:12:12\",\n        \"price\": 3.99,\n        \"deliveryDates\": 12,\n        \"colors\": [\"red\", \"pink\"],\n        \"conditions\": [\"new\"]\n    },\n    {\n        \"name\": \"Wood screw #2\",\n        \"brand\": \"POWERTOOL\",\n        \"type\": \"screws\",\n        \"origin\": \"USA\",\n        \"datePublished\": \"2020-08-20 12:12:12\",\n        \"price\": 12.99,\n        \"deliveryDates\": 1,\n        \"colors\": [\"silver\"],\n        \"conditions\": [\"new\"]\n    },\n    {\n        \"name\": \"Wood screw #4\",\n        \"brand\": \"POWERTOOL\",\n        \"type\": \"screws\",\n        \"origin\": \"USA\",\n        \"datePublished\": \"2020-08-20 14:12:12\",\n        \"price\": 21.99,\n        \"deliveryDates\": 2,\n        \"colors\": [\"black\", \"yellow\", \"silver\"],\n        \"conditions\": [\"new\"]\n    },\n    {\n        \"name\": \"DeWalt screw driver\",\n        \"brand\": \"DeWalt\",\n        \"type\": \"tools\",\n        \"origin\": \"USA\",\n        \"datePublished\": \"2020-07-20 14:12:12\",\n        \"price\": 199.99,\n        \"deliveryDates\": 3,\n        \"colors\": [\"black\"],\n        \"conditions\": [\"new\", \"used\"]\n    },\n    {\n        \"name\": \"Ryobi impact driver\",\n        \"brand\": \"Ryobi\",\n        \"type\": \"tools\",\n        \"origin\": \"China\",\n        \"datePublished\": \"2020-06-20 14:12:12\",\n        \"price\": 98.00,\n        \"deliveryDates\": 6,\n        \"colors\": [\"black\"],\n        \"conditions\": [\"new\", \"used\"]\n    }\n]\n\nexport {\n    mockProducts\n}","const _ = require('lodash')\n\nfunction filterSummaryByFieldName(data, fieldName, sortByOccurrences = false, sortAscent = true) {\n    const values = []\n    _.map(_.map(data, o => o[fieldName]), v => {\n        if (_.isArray(v)) {\n            values.push(...v)\n        }\n        else {\n            values.push(v)\n        }\n    })\n\n    const summary = _.map(_.sortBy(_.uniq(values)), s => ({\n        name: s,\n        occurrences: _.filter(data, o => {\n            const value = o[fieldName]\n            return _.isArray(value) ? _.includes(value, s) : (value === s)\n        }).length,\n    }))\n\n    return _.orderBy(summary, [sortByOccurrences ? 'occurrences' : 'name'], [sortAscent ? 'asc' : 'desc'])\n}\n\nfunction filterValuesByFieldName(data, fieldName) {\n    const values = _.map(data, o => o[fieldName])\n    const realValues = _.filter(values, v => !_.isNaN(v))\n    return realValues\n}\n\nfunction filterDatesByFieldName(data, fieldName) {\n    const rawDates = _.map(data, o => o[fieldName])\n    const realDates = []\n    _.map(rawDates, d => {\n        try {\n            const date = new Date(Date.parse(d))\n            realDates.push(date)\n        } catch (e) {\n            //ignore\n        }\n    })\n    return realDates\n}\n\nfunction formatDate(date) {\n    return (new Date(date)).toISOString().slice(0, 19).replace(\"T\", \" \");\n}\n\nexport {\n    filterSummaryByFieldName,\n    filterValuesByFieldName,\n    filterDatesByFieldName,\n    formatDate\n}","const _ = require('lodash')\n\n/**\n * Filter base class\n */\nclass Filter {\n    owner\n    constructor(owner) {\n        this.owner = owner\n    }\n\n    getOwner() {\n        return this.owner\n    }\n\n    getTitle() {\n        throw new Error('Not Implemented Error')\n    }\n\n    filter(data) {\n        throw new Error('Not Implemented Error')\n    }\n}\n\n/**\n * FileGroup base class\n */\nclass FilterGroup extends Filter {\n    filters\n    constructor(owner, filters) {\n        super(owner)\n        this.filters = filters || []\n    }\n\n    getTitle() {\n        return undefined\n    }\n\n    getFilters() {\n        return this.filters\n    }\n}\n\nclass FilterGroupOrGate extends FilterGroup {\n    filter(data) {\n        if (_.isEmpty(this.filters)) {\n            return data\n        }\n        const finalData = []\n        this.filters.map(filter => finalData.push(...filter.filter(data)))\n        return _.uniqWith(finalData, _.isEqual)\n    }\n}\n\nclass FilterGroupAndGate extends FilterGroup {\n    filter(data) {\n        if (_.isEmpty(this.filters)) {\n            return data\n        }\n        const finalDataArray = []\n        this.filters.map(filter => finalDataArray.push(filter.filter(data)))\n        return _.intersectionWith(...finalDataArray, _.isEqual)\n    }\n}\n\nclass FieldNameFilter extends Filter {\n    fieldName\n    fieldValue\n    constructor(owner, fieldName, fieldValue) {\n        super(owner)\n        this.fieldName = fieldName\n        this.fieldValue = fieldValue\n    }\n\n    getTitle() {\n        return `${this.fieldName}:${this.fieldValue}`\n    }\n\n    filter(data) {\n        return _.filter(data, o => {\n            const value = o[this.fieldName]\n            return _.isArray(value) ? _.includes(value, this.fieldValue) : (value === this.fieldValue)\n        })\n    }\n\n    //special\n    getFieldName() {\n        return this.fieldName\n    }\n\n    getFieldValue() {\n        return this.fieldValue\n    }\n}\n\n\nclass FieldValueRangeFilter extends Filter {\n    fieldName\n    lowerLimit\n    upperLimit\n    constructor(owner, fieldName, lowerLimit, upperLimit) {\n        super(owner)\n        this.fieldName = fieldName\n        this.lowerLimit = lowerLimit\n        this.upperLimit = upperLimit\n    }\n\n    getTitle() {\n        return `${this.fieldName}:(${this.lowerLimit} - ${this.upperLimit})`\n    }\n\n    filter(data) {\n        return _.filter(data, o => o[this.fieldName] <= this.upperLimit && o[this.fieldName] >= this.lowerLimit)\n    }\n\n    //special\n    getFieldName() {\n        return this.fieldName\n    }\n\n    getLowerLimit() {\n        return this.lowerLimit\n    }\n\n    getUpperLimit() {\n        return this.upperLimit\n    }\n}\n\nclass FieldDateRangeFilter extends Filter {\n    fieldName\n    startDate\n    endDate\n    constructor(owner, fieldName, startDate, endDate) {\n        super(owner)\n        this.fieldName = fieldName\n        this.startDate = startDate\n        this.endDate = endDate\n    }\n\n    getTitle() {\n        return `${this.fieldName}:(${this.startDate} - ${this.endDate})`\n    }\n\n    filter(data) {\n        return _.filter(data, o => {\n            try {\n                const date = new Date(Date.parse(o[this.fieldName]))\n                const time = date.getTime()\n                const startTime = this.startDate.getTime()\n                const endTime = this.endDate.getTime()\n\n                return time <= endTime && time >= startTime\n            } catch (error) {\n                return false\n            }\n        })\n    }\n\n    //special\n    getFieldName() {\n        return this.fieldName\n    }\n\n    getStartDate() {\n        return this.startDate\n    }\n\n    getEndDate() {\n        return this.endDate\n    }\n}\n\nexport {\n    Filter,\n    FieldNameFilter,\n    FieldValueRangeFilter,\n    FieldDateRangeFilter,\n    FilterGroup,\n    FilterGroupOrGate,\n    FilterGroupAndGate\n}","\nimport Checkbox from 'rc-checkbox';\nimport React, { useState } from 'react';\nimport Highlighter from 'react-highlight-words';\nimport { BsSortAlphaDown, BsSortAlphaDownAlt, BsSortDown, BsSortDownAlt } from \"react-icons/bs\";\nimport { Radio, RadioGroup } from 'react-radio-group';\nimport { filterSummaryByFieldName } from \"./common/utils\";\nimport './css/style.css';\nimport { FieldNameFilter, FilterGroupOrGate } from './filter';\nconst _ = require('lodash')\n\n\nfunction Facet({ name, occurrences, checked, onChecked, showOccurrences, searchKey }) {\n    return <div className=\"facets-list-item\" onClick={() => onChecked(!checked)}>\n        <Checkbox\n            checked={checked}\n            onChange={event => onChecked(event.target.checked)}\n        />\n        <div className=\"facets-list-item-label\">\n            <Highlighter\n                highlightStyle={{ color: 'red', backgroundColor: 'inherit', padding: 0, margin: 0 }}\n                searchWords={[searchKey]}\n                autoEscape={true}\n                textToHighlight={name}\n            />\n        </div>\n        {\n            showOccurrences &&\n            <div className=\"facets-list-item-occurrences\">({occurrences})</div>\n        }\n    </div>\n}\n\n\nfunction CheckboxOptionList({ name, summary, showOccurrencesColumn, onChange, searchKey, rowsToShow, selectedOptions }) {\n    const rows = _.slice(summary, 0, rowsToShow > 0 ? rowsToShow : summary.length)\n    return <>\n        {\n            rows.map(row => <Facet\n                key={`react-ui-facets-list-${name}-${row.name}`}\n                name={row.name}\n                occurrences={row.occurrences}\n                showOccurrences={showOccurrencesColumn}\n                checked={!!_.find(selectedOptions, o => o === row.name)}\n                onChecked={checked => {\n                    if (checked) {\n                        onChange([...selectedOptions, row.name])\n                    }\n                    else {\n                        const temp = [...selectedOptions]\n                        _.remove(temp, n => n === row.name)\n                        onChange(temp)\n                    }\n                }}\n                searchKey={searchKey}\n            />)\n        }\n    </>\n}\n\nfunction FacetRadio({ name, occurrences, showOccurrences, onLabelClicked, searchKey }) {\n    return <div className=\"facets-list-item\" onClick={onLabelClicked}>\n        <Radio value={name} />\n        <div className=\"facets-list-item-label\">\n            <Highlighter\n                highlightStyle={{ color: 'red', backgroundColor: 'inherit', padding: 0, margin: 0 }}\n                searchWords={[searchKey]}\n                autoEscape={true}\n                textToHighlight={name}\n            />\n        </div>\n        {\n            showOccurrences &&\n            <div className=\"facets-list-item-occurrences\">({occurrences})</div>\n        }\n    </div>\n}\n\nfunction RadioOptionList({ name, summary, showOccurrencesColumn, onChange, searchKey, rowsToShow, selectedOptions }) {\n    const rows = _.slice(summary, 0, rowsToShow > 0 ? rowsToShow : summary.length)\n    const selected = _.isEmpty(selectedOptions) ? '' : selectedOptions[0]\n    return <RadioGroup\n        selectedValue={selected || ''}\n        onChange={v => onChange([v])}\n    >\n        {\n            rows.map(row => <FacetRadio\n                key={`react-ui-facets-list-${name}-${row.name}`}\n                name={row.name}\n                occurrences={row.occurrences}\n                showOccurrences={showOccurrencesColumn}\n                onLabelClicked={() => onChange([row.name])}\n                searchKey={searchKey}\n            />)\n        }\n    </RadioGroup>\n}\n/**\n * \n * @param {*} props\n * -----------------------------------------------------------------------------\n *  Filter Control Common Props\n * -----------------------------------------------------------------------------\n * - name: the unique name of this FacetsList instance\n * - title: the user friendly or readable title of the field\n * - onFilterChanged: (filters) => {...}\n *      filters -> the created filter(s) list\n * - filters: all filter list\n * \n * -----------------------------------------------------------------------------\n *  FacetsList Special Props\n * -----------------------------------------------------------------------------\n * - showOccurrencesColumn: indicates whether or not display the occurences columns\n * - searchBarDisplayThreshold: number of records to trigger the displaying of search bar\n *      <0 -> never display the search bar\n *      =0 -> always display the search bar\n *      >0 -> the number of records\n * - sortBarDisplayThreshold: number of records to trigger the displaying of sort bar\n *      <0 -> never display the sort bar\n *      =0 -> always display the sort bar\n *      >0 -> the number of records\n * - collapseThreshold: number of records to trigger the collapse of record\n *      <=0-> always expand all, never collapse\n *      >0 -> collapse and display the specified number of rows together with \"expand all\" button\n * - sortByOccurrences: \n *      true -> sort by occurences, \n *      false-> sort by group name\n * - sortAscent:\n *      true -> sort ascently, \n *      false-> sort descently\n * @returns \n */\nexport default function FieldFilterControlCategory({\n    name,\n    onFilterChanged,\n    filters,\n    multipleSelect,\n    baseData,\n    config\n}) {\n    const {\n        field,\n        showOccurrencesColumn = true,\n        searchBarDisplayThreshold = 10,\n        sortBarDisplayThreshold = 10,\n        collapseThreshold = 5,\n        sortByOccurrences = true,\n        sortAscent = false,\n    } = config\n\n    const [searchText, setSearchText] = useState('')\n    const [sortByOccurrencesBuffer, setSortByOccurrences] = useState(sortByOccurrences)\n    const [sortAscentBuffer, setSortAscentBuffer] = useState(sortAscent)\n    const [rowsToShow, setRowsToShow] = useState(collapseThreshold)\n\n    const summary = filterSummaryByFieldName(baseData, field, sortByOccurrencesBuffer, sortAscentBuffer)\n    const showSearchBar = (searchBarDisplayThreshold === 0) || (searchBarDisplayThreshold > 0 && searchBarDisplayThreshold < summary.length)\n    const searchedResult = _.filter(summary, s => !searchText || _.toLower(s.name).includes(_.toLower(searchText)))\n\n    // based on search result\n    const showSortBar = (sortBarDisplayThreshold === 0) || (sortBarDisplayThreshold > 0 && sortBarDisplayThreshold < searchedResult.length)\n    const showExpandBar = (collapseThreshold > 0 && collapseThreshold < searchedResult.length && rowsToShow < searchedResult.length)\n\n    const filterGroup = _.find(filters, f => f.getOwner() === name)\n    const selectedOptions = filterGroup ? filterGroup.getFilters().map(f => f.getFieldValue()) : []\n\n    function onChange(selected) {\n        console.log(selected)\n        if (onFilterChanged) {\n            const filter = _.isEmpty(selected) ? undefined : new FilterGroupOrGate(name, selected.map(fieldValue => new FieldNameFilter(name, field, fieldValue)))\n            onFilterChanged(filter)\n        }\n    }\n    return <>\n        {\n            showSearchBar &&\n            <div className=\"facets-list-search-bar-box\">\n                <input\n                    className=\"facets-list-search-bar-input\"\n                    value={searchText || ''}\n                    onChange={(event) => setSearchText(event.target.value)}\n                    autoComplete={\"on\"}\n                    placeholder={'search...'}\n                />\n            </div>\n        }\n        {\n            showSortBar &&\n            <div className=\"facets-list-item\">\n                <div className=\"facets-list-item-label\" onClick={() => {\n                    setSortByOccurrences(false)\n                    setSortAscentBuffer(p => !p)\n                }}>\n                    {\n                        sortAscentBuffer\n                            ? <BsSortAlphaDown className={!sortByOccurrencesBuffer ? 'facets-list-sort-button-active' : 'facets-list-sort-button-deactive'} />\n                            : <BsSortAlphaDownAlt className={!sortByOccurrencesBuffer ? 'facets-list-sort-button-active' : 'facets-list-sort-button-deactive'} />\n                    }\n                </div>\n                {\n                    showOccurrencesColumn &&\n                    <div className=\"facets-list-item-occurrences\" onClick={() => {\n                        setSortByOccurrences(true)\n                        setSortAscentBuffer(p => !p)\n                    }}>\n                        {\n                            sortAscentBuffer\n                                ? <BsSortDownAlt className={sortByOccurrencesBuffer ? 'facets-list-sort-button-active' : 'facets-list-sort-button-deactive'} />\n                                : <BsSortDown className={sortByOccurrencesBuffer ? 'facets-list-sort-button-active' : 'facets-list-sort-button-deactive'} />\n                        }\n                    </div>\n                }\n            </div>\n        }\n        {\n            _.isEmpty(summary)\n                ? <div className=\"facets-list-no-availble-items\"> no available data</div>\n                : (\n                    multipleSelect\n                        ? <CheckboxOptionList\n                            name={name}\n                            summary={searchedResult}\n                            showOccurrencesColumn={showOccurrencesColumn}\n                            onChange={onChange}\n                            searchKey={searchText}\n                            rowsToShow={rowsToShow}\n                            selectedOptions={selectedOptions}\n                        />\n                        : <RadioOptionList\n                            name={name}\n                            summary={searchedResult}\n                            showOccurrencesColumn={showOccurrencesColumn}\n                            onChange={onChange}\n                            searchKey={searchText}\n                            rowsToShow={rowsToShow}\n                            selectedOptions={selectedOptions}\n                        />\n                )\n        }\n        {\n            showExpandBar &&\n            <div className=\"facets-list-expand-button\"\n                onClick={() => setRowsToShow(searchedResult.length)}\n            >\n                show all\n            </div>\n        }\n    </>\n}\n","import React, { useState } from 'react';\nimport { DateRangePicker, defaultStaticRanges } from 'react-date-range';\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\nimport { Dropdown, useDropdownMenu, useDropdownToggle } from \"react-overlays\";\nimport { filterDatesByFieldName, formatDate } from './common/utils';\nimport './css/style.css';\nimport { FieldDateRangeFilter } from './filter';\n\nconst _ = require('lodash')\n\nfunction DateRangeButton({ id, startDate, endDate }) {\n    const [props, { toggle }] = useDropdownToggle()\n    return <button type=\"button\" id={id} {...props} onClick={toggle} className=\"date-range-button\" >\n        {formatDate(startDate).substring(0, 10)} &nbsp; ~ &nbsp; {formatDate(endDate).substring(0, 10)}\n    </ button>\n}\n\nfunction DateRangePanel({ role, show, onClose, startDate, endDate, onDateRangeChanged }) {\n    const thisYearStart = new Date(new Date().getFullYear(), 0, 1)\n    const lastYearStart = new Date(new Date().getFullYear() - 1, 0, 1)\n    const { props } = useDropdownMenu({\n        flip: true,\n        offset: [0, 8]\n    })\n\n    return <div\n        style={{ display: show ? '' : 'none' }}\n        {...props}\n        role={role}\n    >\n        <DateRangePicker\n            ranges={[{\n                startDate: startDate,\n                endDate: endDate,\n                key: 'selection',\n            }]}\n            onChange={ranges => {\n                onClose()\n                onDateRangeChanged(ranges.selection)\n            }}\n            inputRanges={[]}\n            staticRanges={[...defaultStaticRanges,\n            {\n                label: 'This Year',\n                hasCustomRendering: false,\n                range: () => ({\n                    startDate: thisYearStart,\n                    endDate: new Date()\n                }),\n                isSelected() {\n                    return false;\n                }\n            },\n            {\n                label: 'Last Year',\n                hasCustomRendering: false,\n                range: () => ({\n                    startDate: lastYearStart,\n                    endDate: thisYearStart\n                }),\n                isSelected() {\n                    return false;\n                }\n            }]}\n        />\n    </div>\n}\n\nfunction DateRangeSelecttor({ name, startDate, endDate, onDateRangeChanged }) {\n    const [show, setShow] = useState(false);\n    return <Dropdown\n        show={show}\n        onToggle={() => {\n            setShow(p => !p)\n        }}\n    >\n        <DateRangeButton id={`date-range-${name}`} startDate={startDate} endDate={endDate} />\n        <DateRangePanel show={show} onClose={() => setShow(false)} startDate={startDate} endDate={endDate} onDateRangeChanged={selection => {\n            onDateRangeChanged(selection.startDate, selection.endDate)\n        }} />\n    </Dropdown>\n}\n\nexport default function FieldFilterControlDateRange({\n    name,\n    onFilterChanged,\n    filters,\n    baseData,\n    config }) {\n\n    const { field } = config\n    const values = filterDatesByFieldName(baseData, field)\n    const times = _.map(values, v => v.getTime())\n    const minTime = _.min(times)\n    const maxTime = _.max(times)\n    const ownedFilter = _.find(filters, f => f.getOwner() === name)\n    const startTime = ownedFilter ? ownedFilter.getStartDate().getTime() : minTime\n    const endTime = ownedFilter ? ownedFilter.getEndDate().getTime() : maxTime\n    if (_.isEmpty(values)) {\n        return <div>no values</div>\n    }\n    return <DateRangeSelecttor\n        name={name}\n        startDate={new Date(startTime)}\n        endDate={new Date(endTime)}\n        onDateRangeChanged={(startDate, endDate) => {\n            if (onFilterChanged) {\n                const filter = new FieldDateRangeFilter(name, field, startDate, endDate)\n                onFilterChanged(filter)\n            }\n        }}\n    />\n}\n\n","import { Range } from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport React from 'react';\nimport { filterValuesByFieldName } from './common/utils';\nimport { FieldValueRangeFilter } from './filter';\nconst _ = require('lodash')\n\nexport default function FieldFilterControlRangeContinuous({\n    name,\n    onFilterChanged,\n    filters,\n    baseData,\n    config\n}) {\n    const { field, unit } = config\n    const values = filterValuesByFieldName(baseData, field)\n    const minValue = _.min(values)\n    const maxValue = _.max(values)\n    const ownedFilter = _.find(filters, f => f.getOwner() === name)\n    const lowerLimit = ownedFilter ? ownedFilter.getLowerLimit() : minValue\n    const upperLimit = ownedFilter ? ownedFilter.getUpperLimit() : maxValue\n    const marks = {\n        [lowerLimit]: `${lowerLimit}${unit}`,\n        [upperLimit]: `${upperLimit}${unit}`,\n    }\n\n    if (_.isEmpty(values)) {\n        return <div>no values</div>\n    }\n    return <div style={{ padding: '5px 20px 20px 20px' }}>\n        <Range\n            value={[lowerLimit, upperLimit]}\n            marks={marks}\n            min={minValue}\n            max={maxValue}\n            onChange={range => {\n                if (onFilterChanged) {\n                    const lower = range[0]\n                    const upper = range[1]\n                    const filter = new FieldValueRangeFilter(name, field, lower, upper)\n                    onFilterChanged(filter)\n                }\n            }}\n        />\n    </div>\n}\n\n","\nimport { Range } from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport React from 'react';\nimport { filterValuesByFieldName } from \"./common/utils\";\nimport { FieldValueRangeFilter } from './filter';\nconst _ = require('lodash')\n\nexport default function FieldFilterControlRangeDiscrete({\n    name,\n    onFilterChanged,\n    filters,\n    baseData,\n    config\n}) {\n    const { field, unit } = config\n    const values = filterValuesByFieldName(baseData, field)\n    const minValue = _.min(values)\n    const maxValue = _.max(values)\n    const marks = {}\n    _.map(values, v => marks[`${v}`] = `${v}${unit}`)\n\n    const ownedFilter = _.find(filters, f => f.getOwner() === name)\n    const lowerLimit = ownedFilter ? ownedFilter.getLowerLimit() : minValue\n    const upperLimit = ownedFilter ? ownedFilter.getUpperLimit() : maxValue\n    if (_.isEmpty(values)) {\n        return <div>no values</div>\n    }\n    return <div style={{ padding: '5px 20px 20px 20px' }}>\n        <Range\n            value={[lowerLimit, upperLimit]}\n            min={minValue}\n            max={maxValue}\n            marks={marks}\n            onChange={range => {\n                if (onFilterChanged) {\n                    const lower = range[0]\n                    const upper = range[1]\n                    const filter = new FieldValueRangeFilter(name, field, lower, upper)\n                    onFilterChanged(filter)\n                }\n            }}\n        />\n    </div>\n}\n","\nimport React from 'react';\nimport './css/style.css';\nconst _ = require('lodash')\n\nexport default function FilterControl({\n    name,\n    title,\n    onFilterChanged,\n    filters,\n    children\n}) {\n    const currentFilter = _.find(filters, f => f.getOwner() === name)\n    return <div className=\"filter-control\">\n        {\n            title &&\n            <div className=\"filter-control-title-bar\">\n                <div className=\"filter-control-title-bar-text\">{title}</div>\n                {\n                    currentFilter &&\n                    <div className=\"filter-control-title-bar-clear-button\"\n                        onClick={() => onFilterChanged(undefined)}>\n                        clear filters\n                    </div>\n                }\n            </div>\n        }\n        <div className=\"filter-control-content-container\">\n            {children}\n        </div>\n    </div>\n}\n","\nimport React from 'react';\nimport FieldFilterControlCategoryMultiple from './fieldFilterControl_CategoryMultiple';\nimport FieldFilterControlCategorySingle from './fieldFilterControl_CategorySingle';\nimport FieldFilterControlDateRange from './fieldFilterControl_DateRange';\nimport FieldFilterControlRangeContinuous from './fieldFilterControl_RangeContinuous';\nimport FieldFilterControlRangeDiscrete from './fieldFilterControl_RangeDiscrete';\nimport { FilterGroupAndGate } from './filter';\nimport FilterControl from './filterControl';\nconst _ = require('lodash')\n\nconst EFieldType = {\n    CATEGORY_SINGLE: 'CATEGORY_SINGLE',\n    CATEGORY_MULTIPLE: 'CATEGORY_MULTIPLE',\n    DATE_RANGE: 'DATE_RANGE',\n    VALUE_DISCRETE: 'VALUE_DISCRETE',\n    VALUE_CONTINUOUS: 'VALUE_CONTINUOUS',\n    RANGE_DISCRETE: 'RANGE_DISCRETE',\n    RANGE_CONTINUOUS: 'RANGE_CONTINUOUS',\n}\n\nconst EFieldFilterControl = {\n    [EFieldType.CATEGORY_SINGLE]: FieldFilterControlCategorySingle,\n    [EFieldType.CATEGORY_MULTIPLE]: FieldFilterControlCategoryMultiple,\n    [EFieldType.DATE_RANGE]: FieldFilterControlDateRange,\n    [EFieldType.RANGE_DISCRETE]: FieldFilterControlRangeDiscrete,\n    [EFieldType.RANGE_CONTINUOUS]: FieldFilterControlRangeContinuous,\n}\n\nfunction FieldFilterControl({\n    // for frame\n    name,\n    title,\n    onFilterChanged,\n    filters,\n\n    // for base data\n    data,\n    impactedByOtherFilters,\n    isActive,\n\n    // for control selection\n    type,\n\n    // for special control \n    config\n}) {\n    let baseData = data\n    if (impactedByOtherFilters) {\n        if (isActive) {\n            const otherFilters = _.filter(filters, f => f.getOwner() !== name)\n            baseData = (new FilterGroupAndGate('', otherFilters)).filter(data)\n        }\n        else {\n            baseData = (new FilterGroupAndGate('', filters)).filter(data)\n        }\n    }\n\n    const Control = (type in EFieldType) ? EFieldFilterControl[type] : undefined\n    return <FilterControl\n        name={name}\n        title={title}\n        onFilterChanged={onFilterChanged}\n        filters={filters}\n    >\n        {\n            Control\n                ? <Control\n                    name={name}\n                    onFilterChanged={onFilterChanged}\n                    filters={filters}\n                    baseData={baseData}\n                    config={config}\n                />\n                : <div>Invalid field filter</div>\n        }\n    </FilterControl>\n}\n\nexport {\n    FieldFilterControl,\n    EFieldType\n};\n","\nimport React from 'react';\nimport FieldFilterControlCategory from './fieldFilterControl_Category';\n\nexport default function FieldFilterControlCategorySingle({\n    name,\n    onFilterChanged,\n    filters,\n    baseData,\n    config\n}) {\n    return <FieldFilterControlCategory\n        name={name}\n        onFilterChanged={onFilterChanged}\n        filters={filters}\n        baseData={baseData}\n        config={config}\n        multipleSelect={false}\n    />\n}\n","\nimport React from 'react';\nimport FieldFilterControlCategory from './fieldFilterControl_Category';\n\n\nexport default function FieldFilterControlCategoryMultiple({\n    name,\n    onFilterChanged,\n    filters,\n    baseData,\n    config\n}) {\n    return <FieldFilterControlCategory\n        name={name}\n        onFilterChanged={onFilterChanged}\n        filters={filters}\n        baseData={baseData}\n        config={config}\n        multipleSelect={true}\n    />\n}\n","import { useState } from \"react\";\nimport './css/style.css';\nimport { FieldFilterControl } from \"./fieldFilterControl\";\nimport { FilterGroupAndGate } from \"./filter\";\nconst _ = require('lodash')\n\nfunction Block({ children }) {\n    return <div className=\"filter-control-block\">{children}</div>\n}\n\nexport default function FieldFilterControlGroup({ data, filterDescriptors, onFiltered }) {\n    const [filters, setFilters] = useState([])\n    const [active, setActive] = useState('')\n    function updateFilters(newFilters) {\n        setFilters(newFilters)\n        if (onFiltered) {\n            onFiltered(new FilterGroupAndGate('', newFilters).filter(data))\n        }\n    }\n    return <div className=\"filter-control-group\">\n        {\n            filterDescriptors.map(kit => <Block key={`filter-control-block-${kit.name}`}>\n                <FieldFilterControl\n                    title={kit.title}\n                    name={kit.name}\n                    type={kit.type}\n                    filters={filters}\n                    data={data}\n                    impactedByOtherFilters={kit.impactedByOtherFilters}\n                    isActive={active === kit.name}\n\n                    onFilterChanged={filter => {\n                        setActive(kit.name)\n\n                        const temp = [...filters]\n                        _.remove(temp, f => f.getOwner() === kit.name)\n                        if (filter) {\n                            updateFilters([...temp, filter])\n                        }\n                        else {\n                            updateFilters(temp)\n                        }\n                    }}\n                    config={kit.config}\n                />\n            </Block>)\n        }\n    </div>\n}","import { useState } from \"react\";\nimport { mockProducts } from \"../data/mockList\";\nimport { EFieldType, FieldFilterControlGroup } from \"../modules\";\n\nconst descriptors = [\n    {\n        title: 'Date Published',\n        name: 'field-filter-publish',\n        type: EFieldType.DATE_RANGE,\n        impactedByOtherFilters: true,\n        config: {\n            field: 'datePublished',\n        }\n    },\n    {\n        title: 'Price',\n        name: 'field-filter-price',\n        type: EFieldType.RANGE_CONTINUOUS,\n        impactedByOtherFilters: true,\n        config: {\n            field: 'price',\n            unit: '$'\n        }\n    },\n    {\n        title: 'Delivery Dates',\n        name: 'field-filter-delivery',\n        type: EFieldType.RANGE_DISCRETE,\n        impactedByOtherFilters: true,\n        config: {\n            field: 'deliveryDates',\n            unit: 'd'\n        }\n    },\n    {\n        title: 'Origin',\n        name: 'field-filter-origin',\n        type: EFieldType.CATEGORY_MULTIPLE,\n        impactedByOtherFilters: true,\n        config: {\n            field: 'origin',\n            showOccurrencesColumn: true,\n            sortByOccurrences: true,\n            sortAscent: false,\n            searchBarDisplayThreshold: 2,\n            sortBarDisplayThreshold: 2,\n            collapseThreshold: 5,\n        }\n    },\n    {\n        title: 'Brand',\n        name: 'field-filter-brand',\n        type: EFieldType.CATEGORY_SINGLE,\n        impactedByOtherFilters: true,\n        config: {\n            field: 'brand',\n            showOccurrencesColumn: true,\n            sortByOccurrences: true,\n            sortAscent: false,\n            searchBarDisplayThreshold: 3,\n            sortBarDisplayThreshold: 3,\n            collapseThreshold: 2,\n        }\n    },\n    {\n        title: 'Product Type',\n        name: 'field-filter-type',\n        type: EFieldType.CATEGORY_MULTIPLE,\n        impactedByOtherFilters: true,\n        config: {\n            field: 'type',\n            showOccurrencesColumn: false,\n            sortByOccurrences: false,\n            sortAscent: true,\n            searchBarDisplayThreshold: 10,\n            sortBarDisplayThreshold: 10,\n            collapseThreshold: 5,\n        }\n    },\n    {\n        title: 'Color',\n        name: 'field-filter-colors',\n        type: EFieldType.CATEGORY_MULTIPLE,\n        impactedByOtherFilters: true,\n        config: {\n            field: 'colors',\n            showOccurrencesColumn: true,\n            sortByOccurrences: true,\n            sortAscent: false,\n            searchBarDisplayThreshold: 2,\n            sortBarDisplayThreshold: 2,\n            collapseThreshold: 5,\n        }\n    },\n    {\n        title: 'Conditions',\n        name: 'field-filter-conditions',\n        type: EFieldType.CATEGORY_SINGLE,\n        impactedByOtherFilters: true,\n        config: {\n            field: 'conditions',\n            showOccurrencesColumn: true,\n            sortByOccurrences: true,\n            sortAscent: false,\n            searchBarDisplayThreshold: 2,\n            sortBarDisplayThreshold: 2,\n            collapseThreshold: 5,\n        }\n    },\n\n]\n\nexport default function DashboardExample() {\n    const [filteredData, setFilteredData] = useState(mockProducts)\n\n    return <div style={{ display: 'flex', width: '100%', height: '100%', alignItems: 'center', justifyContent: 'center' }}>\n        <div style={{ width: 300, position: 'relative', height: '100%', padding: 10, verticalAlign: 'top' }}>\n            <FieldFilterControlGroup\n                data={mockProducts}\n                filterDescriptors={descriptors}\n                onFiltered={data => setFilteredData(data)}\n            />\n        </div>\n        <div style={{ flex: 1, height: '100%', backgroundColor: \"lightgreen\", overflow: 'auto' }}>\n            Filtered data\n            <pre>\n                {JSON.stringify(filteredData, true, 4)}\n            </pre>\n        </div>\n    </div>\n}"],"sourceRoot":""}